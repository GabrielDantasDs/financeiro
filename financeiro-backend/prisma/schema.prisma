// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["debian-openssl-1.1.x", "native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id         Int      @id @default(autoincrement())
  password   String
  email      String   @unique
  name       String?
  created_at DateTime @default(now())
  client     client[]
}

model client {
  id                    Int                     @id @default(autoincrement())
  user_id               Int
  name                  String
  email                 String
  document              String
  phone                 String
  address               String
  neighborhood          String
  number                String
  state                 String
  city                  String
  zip_code              String
  created_at            DateTime                @default(now())
  user                  user                  @relation(fields: [user_id], references: [id])
  financial_transaction financial_transaction[]
  customer              customer[]
  supplier              supplier[]
  bank_account          bank_account[]
  category              category[]
  product               product[]
}

model customer {
  id                    Int                     @id @default(autoincrement())
  client_id             Int
  name                  String
  document              String?
  phone                 String
  address               String?
  neighborhood          String?
  number                String?
  state                 String?
  city                  String?
  zip_code              String?
  client                client                  @relation(fields: [client_id], references: [id], onDelete: Cascade)
  created_at            DateTime                @default(now())
  financial_transaction financial_transaction[]
  subscription_customer subscription_customer[]
}

model financial_transaction {
  id                   Int                     @id @default(autoincrement())
  first_transaction_id Int?
  subscription_id      Int?
  client_id            Int
  customer_id          Int?
  supplier_id          Int?
  cost_center_id       Int?
  type                 String
  value                Decimal                 @db.Decimal(6, 2)
  category_id          Int?
  invoice_date         DateTime                @default(now())
  due_date             DateTime                @default(now())
  payment_date         DateTime?
  note                 String?
  payed                Boolean
  periodicity          Int?
  recurrencies         Int?
  number_installments  Int?
  bank_account_id      Int
  category             category?                @relation(fields: [category_id], references: [id])
  client               client                  @relation(fields: [client_id], references: [id], onDelete: Cascade)
  bank_account         bank_account            @relation(fields: [bank_account_id], references: [id])
  customer             customer?               @relation(fields: [customer_id], references: [id])
  supplier             supplier?               @relation(fields: [supplier_id], references: [id])
  first_transaction    financial_transaction?  @relation("financial_transaction", fields: [first_transaction_id], references: [id])
  transactions         financial_transaction[] @relation("financial_transaction")
  cost_center          cost_center?            @relation(fields: [cost_center_id], references: [id])
  subscription         subscription_customer?  @relation(fields: [subscription_id], references: [id])
  installments         installments[]

  @@fulltext([note])
}

model installments {
  id                       Int                   @id @default(autoincrement())
  financial_transaction_id Int
  value                    Decimal               @db.Decimal(6, 2)
  due_date                 DateTime
  invoice_date             DateTime              @default(now())
  payment_date             DateTime?
  financial_transaction    financial_transaction @relation(fields: [financial_transaction_id], references: [id], onDelete: Cascade)
}

model category {
  id                    Int                     @id @default(autoincrement())
  client_id             Int
  name                  String
  type                  String
  cost_center           cost_center[]
  financial_transaction financial_transaction[]
  client                client?                 @relation(fields: [client_id], references: [id], onDelete: Cascade)
}

model cost_center {
  id                    Int                     @id @default(autoincrement())
  name                  String
  category_id           Int
  category              category                @relation(fields: [category_id], references: [id])
  financial_transaction financial_transaction[]
}

model payment_method {
  id              Int          @id @default(autoincrement())
  bank_account_id Int
  name            String
  tax             Decimal?     @db.Decimal(6, 2)
  delay_days      Int?
  bank_account    bank_account @relation(fields: [bank_account_id], references: [id])
  check_paid      Boolean
}

model bank_account {
  id                    Int                     @id @default(autoincrement())
  client_id             Int
  name                  String
  institution           String
  inicial_value         Decimal                 @db.Decimal(6, 2)
  date_inicial_value    DateTime
  type                  String
  description           String
  default               Boolean                 @default(false)
  client                client                  @relation(fields: [client_id], references: [id], onDelete: Cascade)
  financial_transaction financial_transaction[]
  payment_method        payment_method[]
}

model supplier {
  id                       Int                        @id @default(autoincrement())
  client_id                Int
  name                     String
  document                 String?
  phone                    String
  address                  String?
  neighborhood             String?
  number                   String?
  state                    String?
  city                     String?
  zip_code                 String?
  client                   client                     @relation(fields: [client_id], references: [id], onDelete: Cascade)
  created_at               DateTime                   @default(now())
  financial_transaction    financial_transaction[]
  recurring_supplier_order recurring_supplier_order[]
}

model product {
  id                    Int                     @id @default(autoincrement())
  client_id             Int
  name                  String
  value                 Decimal                 @db.Decimal(6, 2)
  client                client                  @relation(fields: [client_id], references: [id], onDelete: Cascade)
  subscription_customer subscription_customer[]
}

model subscription_customer {
  id                      Int                     @id @default(autoincrement())
  product_id              Int
  customer_id             Int
  recurrence_time_in_days Int
  product                 product                 @relation(fields: [product_id], references: [id])
  customer                customer                @relation(fields: [customer_id], references: [id])
  financial_transaction   financial_transaction[]
}

model recurring_supplier_order {
  id                      Int      @id @default(autoincrement())
  supplier_id             Int
  name                    String
  value                   Decimal  @db.Decimal(6, 2)
  recurrence_time_in_days Int
  supplier                supplier @relation(fields: [supplier_id], references: [id])
}

model recurring_financial_transaction {
  id Int @id @default(autoincrement())
  financial_transaction_id Int
  recurrence_in_days Int
  original_date DateTime
  current_date DateTime?
  next_date DateTime?
}
