// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["debian-openssl-1.1.x", "native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id         Int      @id @default(autoincrement())
  password   String
  email      String   @unique
  name       String?
  created_at DateTime @default(now())
}

model client {
  id                    Int                     @id @default(autoincrement())
  cli_name              String
  cli_email             String
  cli_document          String
  cli_phone             String
  cli_address           String
  cli_district          String
  cli_number            String
  cli_state             String
  cli_city              String
  cli_zip_code          String
  created_at            DateTime                @default(now())
  financial_transaction financial_transaction[]
  subscriber            subscriber[]
  bank_account          bank_account[]
}

model subscriber {
  id                    Int                     @id @default(autoincrement())
  sub_name              String
  sub_document          String
  sub_phone             String
  sub_address           String
  sub_district          String
  sub_number            String
  sub_state             String
  sub_city              String
  sub_zip_code          String
  sub_id_client         Int
  sub_type              String
  sub_client            client                  @relation(fields: [sub_id_client], references: [id])
  created_at            DateTime                @default(now())
  financial_transaction financial_transaction[]
}

model subscriber_type {
  id       Int    @id @default(autoincrement())
  sut_name String
}

model financial_transaction {
  id                      Int              @id @default(autoincrement())
  fin_id_client           Int
  fin_client              client           @relation(fields: [fin_id_client], references: [id])
  fin_type                String
  fin_value               Decimal          @db.Decimal(6, 2)
  fin_id_category         Int
  fin_category            category         @relation(fields: [fin_id_category], references: [id])
  fin_invoice_date        DateTime         @default(now())
  fin_note                String?
  fin_payment_day         DateTime
  fin_payed               Boolean
  fin_periodicity_type    Periodicity_type @default(UNICA)
  fin_periodicity         Int?
  fin_id_center_cost      Int
  fin_id_bank_account     Int
  fin_number_installments Int?
  fin_bank_account        bank_account     @relation(fields: [fin_id_bank_account], references: [id])
  fin_cost_center         cost_center      @relation(fields: [fin_id_center_cost], references: [id])
  subscriber              subscriber?      @relation(fields: [subscriberId], references: [id])
  subscriberId            Int?
  installments            installments[]
}

enum Periodicity_type {
  UNICA
  RECORRENTE
}

model category {
  id                    Int                     @id @default(autoincrement())
  cat_name              String
  cat_cost_center       cost_center?            @relation(fields: [cat_id_cost_center], references: [id])
  cat_id_cost_center    Int?
  financial_transaction financial_transaction[]
}

model cost_center {
  id                    Int                     @id @default(autoincrement())
  category              category[]
  coc_name              String
  financial_transaction financial_transaction[]
}

model payment_condition {
  id                  Int          @id @default(autoincrement())
  pac_installment     Int
  pac_method          String
  pac_id_bank_account Int
  pac_bank_account    bank_account @relation(fields: [pac_id_bank_account], references: [id])
  pac_paid            Boolean
}

model bank_account {
  id                     Int                     @id @default(autoincrement())
  bac_id_client          Int
  bac_client             client                  @relation(fields: [bac_id_client], references: [id])
  bac_name               String
  bac_institution        String
  bac_inicial_value      Decimal                 @db.Decimal(6, 2)
  bac_date_inicial_value DateTime
  bac_type               String
  bac_description        String
  payment_condition      payment_condition[]
  financial_transaction  financial_transaction[]
}

model installments {
  id                            Int                   @id @default(autoincrement())
  ins_value                     Decimal               @db.Decimal(6, 2)
  ins_number                    Int
  ins_payday                    DateTime
  ins_id_financial_transacation Int
  ins_financial_transacation    financial_transaction @relation(fields: [id], references: [id])
}
